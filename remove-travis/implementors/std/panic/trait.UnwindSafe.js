(function() {var implementors = {};
implementors["numpy"] = [{"text":"impl UnwindSafe for PyArrayDescr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FromVecError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NotContiguousError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ShapeError","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, D&gt; !UnwindSafe for PyReadonlyArray&lt;'py, T, D&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; UnwindSafe for PyArray&lt;T, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayAPI","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NpyTypes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArray_Descr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrray_ArrayDescr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArray_ArrFuncs","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayFlagsObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArray_Dims","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArray_Chunk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayInterface","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyUFuncObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NpyIter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayIterObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayMultiIterObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayNeighborhoodIterObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyArrayMapIterObject","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NpyAuxData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_cdouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_cfloat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_clongdouble","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_datetimestruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_timedeltastruct","synthetic":true,"types":[]},{"text":"impl UnwindSafe for npy_stride_sort_item","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_ORDER","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_SCALARKIND","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_SORTKIND","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_SEARCHSIDE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_DATETIMEUNIT","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_TYPES","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_SELECTKIND","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_CASTING","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NPY_CLIPMODE","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PyUFuncAPI","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for RO&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; UnwindSafe for RW&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !UnwindSafe for NpySingleIterBuilder&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !UnwindSafe for NpySingleIter&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !UnwindSafe for NpyMultiIterBuilder&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !UnwindSafe for NpyMultiIter&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NpyIterFlag","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()