var searchIndex = JSON.parse('{\
"numpy":{"doc":"This crate provides Rust interfaces for NumPy C APIs, …","t":"NEGGIDSCFGFGFGFGFGFGFGDNCCCCCCCCCCCDCCCCCCCCCCCCCCCCCDCCLLLLAOLLLLLLLALLLLLLLLLLLLAALLFFLFOLLLLLLLLLLLLLLLLLLLLLLLLLLLCKLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLCLCLLLALLLLLLOCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGGDGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQIQQIIIKKSDDSILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAANLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEHDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNLLLLLLLLLNNNNNNNNLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDGGDGGDDDDDDDGGGDDDGGGDDDDGGGGGGGGGGGGGGGGGDGGGGMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNNNEENNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNNNNNNNNSENNNNENNEENNNENNNNNNEEENNNNNNNNNNNNNNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMGGDDGDGGGGDGGGGGGGGGGGGGGGGGGDGDGGGGGGGGGGGLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AlreadyBorrowed","BorrowError","Complex32","Complex64","Element","FromVecError","IS_COPY","IntoPyArray","Ix1","Ix1","Ix2","Ix2","Ix3","Ix3","Ix4","Ix4","Ix5","Ix5","Ix6","Ix6","IxDyn","IxDyn","NotContiguousError","NotWriteable","NpyIndex","PY_ARRAY_API","PY_UFUNC_API","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDescr","PyArrayDyn","PyReadonlyArray","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","PyUntypedArray","ToNpyDims","ToPyArray","alignment","arguments","arguments","arguments","array","array","as_array_ptr","as_dtype_ptr","as_ptr","as_ptr","as_ref","as_ref","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byteorder","char","convert","datetime","deref","deref","dot","dtype","dtype","einsum","einsum","extract","extract","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_borrowed_ptr_or_opt","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","from_owned_ptr_or_opt","from_subset","from_subset","from_subset","from_subset","from_subset","get_array_module","get_dtype","get_dtype","get_dtype","get_field","has_fields","has_object","has_subarray","inner","into","into","into","into","into","into_dtype_ptr","into_py","into_py","into_py","is_aligned_struct","is_c_contiguous","is_contiguous","is_empty","is_equiv_to","is_fortran_contiguous","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_native_byteorder","is_type_of","is_type_of","itemsize","kind","len","nalgebra","names","ndarray","ndim","ndim","new","npyffi","num","object","of","provide","provide","provide","pyarray","pyo3","shape","shape","strides","to_object","to_object","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_exact","try_from_unchecked","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_object_raw","type_object_raw","typeobj","wrap","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDyn","arange","as_array","as_array_mut","as_ptr","as_raw_array","as_raw_array_mut","as_ref","as_slice","as_slice_mut","as_untyped","borrow","borrow_from_array","borrow_mut","cast","copy_to","data","deref","dims","extract","fmt","fmt","from","from_array","from_borrowed_ptr","from_borrowed_ptr_or_opt","from_iter","from_owned_array","from_owned_object_array","from_owned_ptr","from_owned_ptr_or_opt","from_slice","from_subset","from_vec","from_vec2","from_vec3","get","get_array_module","get_mut","get_owned","into","into_py","into_py","is_in_subset","is_type_of","item","new","readonly","readwrite","reshape","reshape_with_order","resize","to_dyn","to_object","to_owned","to_owned_array","to_string","to_subset","to_subset_unchecked","to_vec","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_readonly","try_readwrite","type_id","type_object_raw","uget","uget_mut","uget_raw","wrap","zeros","PyReadonlyArray","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","PyReadwriteArray","PyReadwriteArray1","PyReadwriteArray2","PyReadwriteArray3","PyReadwriteArray4","PyReadwriteArray5","PyReadwriteArray6","PyReadwriteArrayDyn","as_array","as_array_mut","as_matrix","as_matrix","as_matrix_mut","as_matrix_mut","as_slice","as_slice_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","drop","drop","extract","extract","fmt","fmt","from","from","from_subset","from_subset","get","get_mut","into","into","is_in_subset","is_in_subset","resize","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_matrix","try_as_matrix_mut","try_from","try_from","try_into","try_into","type_id","type_id","Dim","Dim","IntoPyArray","Item","Item","NpyIndex","ToNpyDims","ToPyArray","into_pyarray","to_pyarray","ABBREV","Datetime","Timedelta","UNIT","Unit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from","from","from_subset","from_subset","get_dtype","get_dtype","hash","hash","into","into","is_in_subset","is_in_subset","partial_cmp","partial_cmp","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","units","Attoseconds","Days","Femtoseconds","Hours","Microseconds","Milliseconds","Minutes","Months","Nanoseconds","Picoseconds","Seconds","Weeks","Years","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","array","flags","objects","types","ufunc","NPY_NUMUSERTYPES","NpyIter_AdvancedNew","NpyIter_Copy","NpyIter_CreateCompatibleStrides","NpyIter_Deallocate","NpyIter_DebugPrint","NpyIter_EnableExternalLoop","NpyIter_GetAxisStrideArray","NpyIter_GetBufferSize","NpyIter_GetDataPtrArray","NpyIter_GetDescrArray","NpyIter_GetGetMultiIndex","NpyIter_GetIndexPtr","NpyIter_GetInitialDataPtrArray","NpyIter_GetInnerFixedStrideArray","NpyIter_GetInnerLoopSizePtr","NpyIter_GetInnerStrideArray","NpyIter_GetIterIndex","NpyIter_GetIterIndexRange","NpyIter_GetIterNext","NpyIter_GetIterSize","NpyIter_GetIterView","NpyIter_GetNDim","NpyIter_GetNOp","NpyIter_GetOperandArray","NpyIter_GetReadFlags","NpyIter_GetShape","NpyIter_GetWriteFlags","NpyIter_GotoIndex","NpyIter_GotoIterIndex","NpyIter_GotoMultiIndex","NpyIter_HasDelayedBufAlloc","NpyIter_HasExternalLoop","NpyIter_HasIndex","NpyIter_HasMultiIndex","NpyIter_IsBuffered","NpyIter_IsFirstVisit","NpyIter_IsGrowInner","NpyIter_IterationNeedsAPI","NpyIter_MultiNew","NpyIter_New","NpyIter_RemoveAxis","NpyIter_RemoveMultiIndex","NpyIter_RequiresBuffering","NpyIter_Reset","NpyIter_ResetBasePointers","NpyIter_ResetToIterIndexRange","NpyTypes","PY_ARRAY_API","PyArrayAPI","PyArrayDescr_Type","PyArrayFlags_Type","PyArrayIter_Type","PyArrayMultiIter_Type","PyArray_All","PyArray_Any","PyArray_Arange","PyArray_ArangeObj","PyArray_ArgMax","PyArray_ArgMin","PyArray_ArgPartition","PyArray_ArgSort","PyArray_As1D","PyArray_As2D","PyArray_AsCArray","PyArray_AxisConverter","PyArray_BoolConverter","PyArray_Broadcast","PyArray_BroadcastToShape","PyArray_BufferConverter","PyArray_ByteorderConverter","PyArray_Byteswap","PyArray_CanCastArrayTo","PyArray_CanCastSafely","PyArray_CanCastScalar","PyArray_CanCastTo","PyArray_CanCastTypeTo","PyArray_CanCoerceScalar","PyArray_CastAnyTo","PyArray_CastScalarDirect","PyArray_CastScalarToCtype","PyArray_CastTo","PyArray_CastToType","PyArray_CastingConverter","PyArray_Check","PyArray_CheckAnyScalarExact","PyArray_CheckAxis","PyArray_CheckExact","PyArray_CheckFromAny","PyArray_CheckStrides","PyArray_Choose","PyArray_Clip","PyArray_ClipmodeConverter","PyArray_CompareLists","PyArray_CompareString","PyArray_CompareUCS4","PyArray_Compress","PyArray_Concatenate","PyArray_Conjugate","PyArray_ConvertClipmodeSequence","PyArray_ConvertToCommonType","PyArray_Converter","PyArray_CopyAndTranspose","PyArray_CopyAnyInto","PyArray_CopyInto","PyArray_CopyObject","PyArray_Correlate","PyArray_Correlate2","PyArray_CountNonzero","PyArray_CreateSortedStridePerm","PyArray_CumProd","PyArray_CumSum","PyArray_DatetimeStructToDatetime","PyArray_DatetimeToDatetimeStruct","PyArray_DebugPrint","PyArray_DescrAlignConverter","PyArray_DescrAlignConverter2","PyArray_DescrConverter","PyArray_DescrConverter2","PyArray_DescrFromObject","PyArray_DescrFromScalar","PyArray_DescrFromType","PyArray_DescrFromTypeObject","PyArray_DescrNew","PyArray_DescrNewByteorder","PyArray_DescrNewFromType","PyArray_Diagonal","PyArray_Dump","PyArray_Dumps","PyArray_EinsteinSum","PyArray_ElementFromName","PyArray_ElementStrides","PyArray_Empty","PyArray_EnsureAnyArray","PyArray_EnsureArray","PyArray_EquivTypenums","PyArray_EquivTypes","PyArray_FailUnlessWriteable","PyArray_FieldNames","PyArray_FillObjectArray","PyArray_FillWithScalar","PyArray_Flatten","PyArray_Free","PyArray_FromAny","PyArray_FromArray","PyArray_FromArrayAttr","PyArray_FromBuffer","PyArray_FromDims","PyArray_FromDimsAndDataAndDescr","PyArray_FromFile","PyArray_FromInterface","PyArray_FromIter","PyArray_FromScalar","PyArray_FromString","PyArray_FromStructInterface","PyArray_GetArrayParamsFromObject","PyArray_GetCastFunc","PyArray_GetEndianness","PyArray_GetField","PyArray_GetNDArrayCFeatureVersion","PyArray_GetNDArrayCVersion","PyArray_GetNumericOps","PyArray_GetPriority","PyArray_GetPtr","PyArray_INCREF","PyArray_InitArrFuncs","PyArray_InnerProduct","PyArray_IntTupleFromIntp","PyArray_IntpConverter","PyArray_IntpFromSequence","PyArray_Item_INCREF","PyArray_Item_XDECREF","PyArray_IterAllButAxis","PyArray_IterNew","PyArray_LexSort","PyArray_MapIterArray","PyArray_MapIterArrayCopyIfOverlap","PyArray_MapIterNext","PyArray_MapIterSwapAxes","PyArray_MatrixProduct","PyArray_MatrixProduct2","PyArray_Max","PyArray_Mean","PyArray_Min","PyArray_MinScalarType","PyArray_MoveInto","PyArray_MultiplyIntList","PyArray_MultiplyList","PyArray_NeighborhoodIterNew","PyArray_New","PyArray_NewCopy","PyArray_NewFlagsObject","PyArray_NewFromDescr","PyArray_NewLikeArray","PyArray_Newshape","PyArray_Nonzero","PyArray_ObjectType","PyArray_One","PyArray_OrderConverter","PyArray_OutputConverter","PyArray_OverflowMultiplyList","PyArray_Partition","PyArray_Prod","PyArray_PromoteTypes","PyArray_Ptp","PyArray_PutMask","PyArray_PutTo","PyArray_PyIntAsInt","PyArray_PyIntAsIntp","PyArray_Ravel","PyArray_RegisterCanCast","PyArray_RegisterCastFunc","PyArray_RegisterDataType","PyArray_RemoveAxesInPlace","PyArray_RemoveSmallest","PyArray_Repeat","PyArray_Reshape","PyArray_Resize","PyArray_ResolveWritebackIfCopy","PyArray_ResultType","PyArray_Return","PyArray_Round","PyArray_Scalar","PyArray_ScalarAsCtype","PyArray_ScalarFromObject","PyArray_ScalarKind","PyArray_SearchSorted","PyArray_SearchsideConverter","PyArray_SelectkindConverter","PyArray_SetBaseObject","PyArray_SetDatetimeParseFunction","PyArray_SetField","PyArray_SetNumericOps","PyArray_SetStringFunction","PyArray_SetUpdateIfCopyBase","PyArray_SetWritebackIfCopyBase","PyArray_Size","PyArray_Sort","PyArray_SortkindConverter","PyArray_Squeeze","PyArray_Std","PyArray_Sum","PyArray_SwapAxes","PyArray_TakeFrom","PyArray_TimedeltaStructToTimedelta","PyArray_TimedeltaToTimedeltaStruct","PyArray_ToFile","PyArray_ToList","PyArray_ToString","PyArray_Trace","PyArray_Transpose","PyArray_Type","PyArray_TypeObjectFromType","PyArray_TypestrConvert","PyArray_UpdateFlags","PyArray_ValidType","PyArray_View","PyArray_Where","PyArray_XDECREF","PyArray_Zero","PyArray_Zeros","PyBigArray_Type","PyBoolArrType_Type","PyByteArrType_Type","PyCDoubleArrType_Type","PyCFloatArrType_Type","PyCLongDoubleArrType_Type","PyCharacterArrType_Type","PyComplexFloatingArrType_Type","PyDataMem_FREE","PyDataMem_NEW","PyDataMem_NEW_ZEROED","PyDataMem_RENEW","PyDataMem_SetEventHook","PyDoubleArrType_Type","PyFlexibleArrType_Type","PyFloatArrType_Type","PyFloatingArrType_Type","PyGenericArrType_Type","PyInexactArrType_Type","PyIntArrType_Type","PyIntegerArrType_Type","PyLongArrType_Type","PyLongDoubleArrType_Type","PyLongLongArrType_Type","PyNumberArrType_Type","PyObjectArrType_Type","PyShortArrType_Type","PySignedIntegerArrType_Type","PyStringArrType_Type","PyUByteArrType_Type","PyUIntArrType_Type","PyULongArrType_Type","PyULongLongArrType_Type","PyUShortArrType_Type","PyUnicodeArrType_Type","PyUnsignedIntegerArrType_Type","PyVoidArrType_Type","_PyArrayScalar_BoolValues","_PyArray_GetSigintBuf","_PyArray_SigintHandler","borrow","borrow","borrow_mut","borrow_mut","from","from","from_subset","from_subset","get_type_object","into","into","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","NPY_ALIGNED_STRUCT","NPY_ARRAY_ALIGNED","NPY_ARRAY_BEHAVED","NPY_ARRAY_BEHAVED_NS","NPY_ARRAY_CARRAY","NPY_ARRAY_CARRAY_RO","NPY_ARRAY_C_CONTIGUOUS","NPY_ARRAY_DEFAULT","NPY_ARRAY_ELEMENTSTRIDES","NPY_ARRAY_ENSUREARRAY","NPY_ARRAY_ENSURECOPY","NPY_ARRAY_FARRAY","NPY_ARRAY_FARRAY_RO","NPY_ARRAY_FORCECAST","NPY_ARRAY_F_CONTIGUOUS","NPY_ARRAY_INOUT_ARRAY","NPY_ARRAY_INOUT_ARRAY2","NPY_ARRAY_INOUT_FARRAY","NPY_ARRAY_INOUT_FARRAY2","NPY_ARRAY_IN_ARRAY","NPY_ARRAY_IN_FARRAY","NPY_ARRAY_NOTSWAPPED","NPY_ARRAY_OUT_ARRAY","NPY_ARRAY_OUT_FARRAY","NPY_ARRAY_OWNDATA","NPY_ARRAY_UPDATEIFCOPY","NPY_ARRAY_UPDATE_ALL","NPY_ARRAY_WRITEABLE","NPY_ARRAY_WRITEBACKIFCOPY","NPY_FROM_FIELDS","NPY_ITEM_HASOBJECT","NPY_ITEM_IS_POINTER","NPY_ITEM_REFCOUNT","NPY_ITER_ALIGNED","NPY_ITER_ALLOCATE","NPY_ITER_ARRAYMASK","NPY_ITER_BUFFERED","NPY_ITER_COMMON_DTYPE","NPY_ITER_CONTIG","NPY_ITER_COPY","NPY_ITER_COPY_IF_OVERLAP","NPY_ITER_C_INDEX","NPY_ITER_DELAY_BUFALLOC","NPY_ITER_DONT_NEGATE_STRIDES","NPY_ITER_EXTERNAL_LOOP","NPY_ITER_F_INDEX","NPY_ITER_GLOBAL_FLAGS","NPY_ITER_GROWINNER","NPY_ITER_MULTI_INDEX","NPY_ITER_NBO","NPY_ITER_NO_BROADCAST","NPY_ITER_NO_SUBTYPE","NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE","NPY_ITER_PER_OP_FLAGS","NPY_ITER_RANGED","NPY_ITER_READONLY","NPY_ITER_READWRITE","NPY_ITER_REDUCE_OK","NPY_ITER_REFS_OK","NPY_ITER_UPDATEIFCOPY","NPY_ITER_VIRTUAL","NPY_ITER_WRITEMASKED","NPY_ITER_WRITEONLY","NPY_ITER_ZEROSIZE_OK","NPY_LIST_PICKLE","NPY_NEEDS_INIT","NPY_NEEDS_PYAPI","NPY_OBJECT_DTYPE_FLAGS","NPY_USE_GETITEM","NPY_USE_SETITEM","NpyAuxData","NpyAuxData_CloneFunc","NpyAuxData_FreeFunc","NpyIter","NpyIter_GetMultiIndexFunc","NpyIter_IterNextFunc","PyArrayFlagsObject","PyArrayInterface","PyArrayIterObject","PyArrayMapIterObject","PyArrayMultiIterObject","PyArrayNeighborhoodIterObject","PyArrayObject","PyArray_ArgFunc","PyArray_ArgPartitionFunc","PyArray_ArgSortFunc","PyArray_ArrFuncs","PyArray_ArrayDescr","PyArray_Chunk","PyArray_CompareFunc","PyArray_CopySwapFunc","PyArray_CopySwapNFunc","PyArray_DatetimeDTypeMetaData","PyArray_DatetimeMetaData","PyArray_Descr","PyArray_Dims","PyArray_DotFunc","PyArray_FastClipFunc","PyArray_FastPutmaskFunc","PyArray_FastTakeFunc","PyArray_FillFunc","PyArray_FillWithScalarFunc","PyArray_FromStrFunc","PyArray_GetItemFunc","PyArray_NonzeroFunc","PyArray_PartitionFunc","PyArray_ScalarKindFunc","PyArray_ScanFunc","PyArray_SetItemFunc","PyArray_SortFunc","PyArray_VectorUnaryFunc","PyDataMem_EventHookFunc","PyUFuncGenericFunction","PyUFuncObject","PyUFunc_LegacyInnerLoopSelectionFunc","PyUFunc_MaskedInnerLoopSelectionFunc","PyUFunc_MaskedStridedInnerLoopFunc","PyUFunc_TypeResolutionFunc","_internal_iter","ait","alignment","ao","ao","argmax","argmin","argsort","arr","array","backstrides","backstrides","base","base","base","base","base","baseoffset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","byteorder","c_metadata","cancastscalarkindto","cancastto","cast","castdict","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","consec","constant","contiguous","contiguous","coordinates","coordinates","copyswap","copyswapn","core_dim_ixs","core_enabled","core_num_dim_ix","core_num_dims","core_offsets","core_signature","data","data","data","dataptr","dataptr","dataptr","descr","descr","dimensions","dimensions","dimensions","dimensions","dims_m1","dims_m1","doc","dotfunc","elsize","extra_op","extra_op_dtype","extra_op_flags","extra_op_iter","extra_op_next","extra_op_ptrs","f","factors","factors","fancy_dims","fancy_strides","fastclip","fastputmask","fasttake","fields","fill","fillwithscalar","flags","flags","flags","flags","flags","fmt","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","fromstr","functions","getitem","hash","identity","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","itemsize","iter_count","iter_flags","iteraxes","iters","kind","legacy_inner_loop_selector","len","len","limits","limits","limits_sizes","limits_sizes","masked_inner_loop_selector","meta","metadata","mode","name","names","nargs","nd","nd","nd","nd","nd","nd_fancy","nd_m1","nd_m1","needs_api","nin","nonzero","nout","npy_iter_get_dataptr_t","ntypes","num","numiter","numiter","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","obj","op_flags","outer","outer_next","outer_ptrs","outer_strides","ptr","ptr","ptr","reserved","reserved1","reserved2","scalarkind","scanfunc","setitem","shape","shape","size","size","size","size","sort","strides","strides","strides","strides","subarray","subspace","subspace_iter","subspace_next","subspace_ptrs","subspace_strides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_num","type_resolver","typekind","typeobj","types","unused","userloops","weakreflist","NPY_ANYORDER","NPY_BIG","NPY_BOOL","NPY_BOOLLTR","NPY_BOOL_SCALAR","NPY_BYTE","NPY_BYTELTR","NPY_BYTEORDER_CHAR","NPY_CASTING","NPY_CDOUBLE","NPY_CDOUBLELTR","NPY_CFLOAT","NPY_CFLOATLTR","NPY_CHAR","NPY_CHARLTR","NPY_CLIP","NPY_CLIPMODE","NPY_CLONGDOUBLE","NPY_CLONGDOUBLELTR","NPY_COMPLEXLTR","NPY_COMPLEX_SCALAR","NPY_CORDER","NPY_DATETIME","NPY_DATETIMELTR","NPY_DATETIMEUNIT","NPY_DOUBLE","NPY_DOUBLELTR","NPY_EQUIV_CASTING","NPY_FLOAT","NPY_FLOATINGLTR","NPY_FLOATLTR","NPY_FLOAT_SCALAR","NPY_FORTRANORDER","NPY_FR_D","NPY_FR_GENERIC","NPY_FR_M","NPY_FR_W","NPY_FR_Y","NPY_FR_as","NPY_FR_fs","NPY_FR_h","NPY_FR_m","NPY_FR_ms","NPY_FR_ns","NPY_FR_ps","NPY_FR_s","NPY_FR_us","NPY_GENBOOLLTR","NPY_HALF","NPY_HALFLTR","NPY_HEAPSORT","NPY_IGNORE","NPY_INT","NPY_INTLTR","NPY_INTNEG_SCALAR","NPY_INTPLTR","NPY_INTPOS_SCALAR","NPY_INTROSELECT","NPY_KEEPORDER","NPY_LITTLE","NPY_LONG","NPY_LONGDOUBLE","NPY_LONGDOUBLELTR","NPY_LONGLONG","NPY_LONGLONGLTR","NPY_LONGLTR","NPY_MERGESORT","NPY_NATBYTE","NPY_NATIVE","NPY_NOSCALAR","NPY_NOTYPE","NPY_NO_CASTING","NPY_NTYPES","NPY_OBJECT","NPY_OBJECTLTR","NPY_OBJECT_SCALAR","NPY_OPPBYTE","NPY_ORDER","NPY_QUICKSORT","NPY_RAISE","NPY_SAFE_CASTING","NPY_SAME_KIND_CASTING","NPY_SCALARKIND","NPY_SEARCHLEFT","NPY_SEARCHRIGHT","NPY_SEARCHSIDE","NPY_SELECTKIND","NPY_SHORT","NPY_SHORTLTR","NPY_SIGNEDLTR","NPY_SORTKIND","NPY_STRING","NPY_STRINGLTR","NPY_STRINGLTR2","NPY_SWAP","NPY_TIMEDELTA","NPY_TIMEDELTALTR","NPY_TYPECHAR","NPY_TYPEKINDCHAR","NPY_TYPES","NPY_UBYTE","NPY_UBYTELTR","NPY_UINT","NPY_UINTLTR","NPY_UINTPLTR","NPY_ULONG","NPY_ULONGLONG","NPY_ULONGLONGLTR","NPY_ULONGLTR","NPY_UNICODE","NPY_UNICODELTR","NPY_UNSAFE_CASTING","NPY_UNSIGNEDLTR","NPY_USERDEF","NPY_USHORT","NPY_USHORTLTR","NPY_VOID","NPY_VOIDLTR","NPY_WRAP","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","day","day","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hour","imag","imag","imag","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","min","month","npy_bool","npy_byte","npy_cdouble","npy_cfloat","npy_char","npy_clongdouble","npy_complex128","npy_complex256","npy_complex64","npy_datetime","npy_datetimestruct","npy_double","npy_float","npy_float128","npy_float16","npy_float32","npy_float64","npy_half","npy_hash_t","npy_int","npy_int16","npy_int32","npy_int64","npy_int8","npy_intp","npy_long","npy_longdouble","npy_longlong","npy_short","npy_stride_sort_item","npy_timedelta","npy_timedeltastruct","npy_ubyte","npy_ucs4","npy_uint","npy_uint16","npy_uint32","npy_uint64","npy_uint8","npy_uintp","npy_ulong","npy_ulonglong","npy_ushort","partial_cmp","perm","ps","ps","real","real","real","sec","sec","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","us","us","year","PY_UFUNC_API","PyUFuncAPI","PyUFunc_DD_D","PyUFunc_D_D","PyUFunc_DefaultTypeResolver","PyUFunc_FF_F","PyUFunc_FF_F_As_DD_D","PyUFunc_F_F","PyUFunc_F_F_As_D_D","PyUFunc_FromFuncAndData","PyUFunc_FromFuncAndDataAndSignature","PyUFunc_FromFuncAndDataAndSignatureAndIdentity","PyUFunc_GG_G","PyUFunc_G_G","PyUFunc_GenericFunction","PyUFunc_GetPyValues","PyUFunc_OO_O","PyUFunc_OO_O_method","PyUFunc_O_O","PyUFunc_O_O_method","PyUFunc_On_Om","PyUFunc_RegisterLoopForDescr","PyUFunc_RegisterLoopForType","PyUFunc_ReplaceLoopBySignature","PyUFunc_SetUsesArraysAsData","PyUFunc_ValidateCasting","PyUFunc_checkfperr","PyUFunc_clearfperr","PyUFunc_d_d","PyUFunc_dd_d","PyUFunc_e_e","PyUFunc_e_e_As_d_d","PyUFunc_e_e_As_f_f","PyUFunc_ee_e","PyUFunc_ee_e_As_dd_d","PyUFunc_ee_e_As_ff_f","PyUFunc_f_f","PyUFunc_f_f_As_d_d","PyUFunc_ff_f","PyUFunc_ff_f_As_dd_d","PyUFunc_g_g","PyUFunc_getfperr","PyUFunc_gg_g","PyUFunc_handlefperr","borrow","borrow_mut","from","from_subset","into","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id"],"q":["numpynumpy::array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::convert","","","","","","","","","","numpy::datetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::datetime::unitsnumpy::npyffi","","","","","numpy::npyffi::arraynumpy::npyffi::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::npyffi::objectsnumpy::npyffi::typesnumpy::npyffi::ufunc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The given array is already borrowed","Inidcates why borrowing an array failed.","","","Represents that a type can be an element of <code>PyArray</code>.","Represents that given <code>Vec</code> cannot be treated as an array.","Flag that indicates whether this type is trivially …","","Create a one-dimensional index","one-dimensional","Create a two-dimensional index","two-dimensional","Create a three-dimensional index","three-dimensional","Create a four-dimensional index","four-dimensional","Create a five-dimensional index","five-dimensional","Create a six-dimensional index","six-dimensional","Create a dynamic-dimensional index","dynamic-dimensional","Represents that the given array is not contiguous.","The given array is not writeable","","","","","","","","","","","","Binding of <code>numpy.dtype</code>.","","","","","","","","","","","","","","","","","","A safe, untyped wrapper for NumPy’s <code>ndarray</code> class.","","","Returns the required alignment (bytes) of this type …","","","","Safe interface for NumPy’s N-dimensional arrays","Create an <strong><code>Array</code></strong> with one, two or three dimensions.","Returns a raw pointer to the underlying <code>PyArrayObject</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code>.","Gets the underlying FFI pointer, returns a borrowed …","Gets the underlying FFI pointer, returns a borrowed …","","","Returns the type descriptor for the base element of …","Types to safely create references into NumPy arrays","","","","","","","","","","","Returns an ASCII character indicating the byte-order of …","Returns a unique ASCII character for each of the 21 …","Defines conversion traits between Rust types and NumPy …","Support datetimes and timedeltas","","","Return the dot product of two arrays.","Returns the type descriptor (“dtype”) for a registered …","Returns the <code>dtype</code> of the array.","Return the Einstein summation convention of given tensors.","Return the Einstein summation convention of given tensors.","","","Returns bit-flags describing how this type descriptor is …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the associated type descriptor (“dtype”) for …","","","Returns the type descriptor and offset of the field with …","Returns true if the type descriptor is a structured type.","Returns true if the type descriptor contains any …","Returns true if the type descriptor is a sub-array.","Return the inner product of two arrays.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>self</code> as <code>*mut PyArray_Descr</code> while increasing the …","","","","Returns true if the type descriptor is a struct which …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the internal data of the array is …","Returns <code>true</code> if the there are no elements in the array.","Returns true if two type descriptors are equivalent.","Returns <code>true</code> if the internal data of the array is …","","","","","","Returns true if type descriptor byteorder is native, or …","","","Returns the element size of this type descriptor.","Returns an ASCII character (one of <code>biufcmMOSUV</code>) …","Calculates the total number of elements in the array.","","Returns an ordered list of field names, or <code>None</code> if there …","","Returns the number of dimensions if this type descriptor …","Returns the number of dimensions of the array.","Creates a new type descriptor (“dtype”) object from an …","Low-Level bindings for NumPy C API.","Returns a unique number for each of the 21 different …","Shortcut for creating a type descriptor of <code>object</code> type.","Returns the type descriptor for a registered type.","","","","Create a <code>PyArray</code> with one, two or three dimensions.","","Returns the shape of the sub-array.","Returns a slice which contains dimmensions of the array.","Returns a slice indicating how many bytes to advance when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the array scalar corresponding to this type …","","A safe, statically-typed wrapper for NumPy’s <code>ndarray</code> …","Zero-dimensional array.","One-dimensional array.","Two-dimensional array.","Three-dimensional array.","Four-dimensional array.","Five-dimensional array.","Six-dimensional array.","Dynamic-dimensional array.","Return evenly spaced values within a given interval.","Returns an <code>ArrayView</code> of the internal array.","Returns an <code>ArrayViewMut</code> of the internal array.","","Returns the internal array as <code>RawArrayView</code> enabling …","Returns the internal array as <code>RawArrayViewMut</code> enabling …","","Returns an immutable view of the internal data as a slice.","Returns a mutable view of the internal data as a slice.","Access an untyped representation of this array.","","Creates a NumPy array backed by <code>array</code> and ties its …","","Cast the <code>PyArray&lt;T&gt;</code> to <code>PyArray&lt;U&gt;</code>, by allocating a new …","Copies <code>self</code> into <code>other</code>, performing a data type conversion …","Returns a pointer to the first element of the array.","","Same as <code>shape</code>, but returns <code>D</code> instead of <code>&amp;[usize]</code>.","","","","Returns the argument unchanged.","Construct a NumPy array from a <code>ndarray::ArrayBase</code>.","Constructs a reference to a <code>PyArray</code> from a raw point to a …","","Construct a one-dimensional array from an <code>Iterator</code>.","Constructs a NumPy from an <code>ndarray::Array</code>","Construct a NumPy array containing objects stored in a …","Constructs a reference to a <code>PyArray</code> from a raw pointer to …","","Construct a one-dimensional array from a slice.","","Construct a one-dimensional array from a <code>Vec&lt;T&gt;</code>.","Construct a two-dimension array from a <code>Vec&lt;Vec&lt;T&gt;&gt;</code>.","Construct a three-dimensional array from a <code>Vec&lt;Vec&lt;Vec&lt;T&gt;&gt;&gt;</code>…","Get a reference of the specified element if the given …","Returns a handle to NumPy’s multiarray module.","Same as <code>get</code>, but returns <code>Option&lt;&amp;mut T&gt;</code>.","Get a copy of the specified element in the array.","Calls <code>U::from(self)</code>.","","","","","Get the single element of a zero-dimensional array.","Creates a new uninitialized NumPy array.","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","Special case of <code>reshape_with_order</code> which keeps the memory …","Construct a new array which has same values as self, but …","Extends or truncates the dimensions of an array.","Turn an array with fixed dimensionality into one with …","","Turn <code>&amp;PyArray&lt;T,D&gt;</code> into <code>Py&lt;PyArray&lt;T,D&gt;&gt;</code>, i.e. a pointer …","Get a copy of the array as an <code>ndarray::Array</code>.","","","","Returns a copy of the internal data of the array as a <code>Vec</code>.","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","Get an immutable borrow of the NumPy array","Get a mutable borrow of the NumPy array","","","Get an immutable reference of the specified element, …","Same as <code>uget</code>, but returns <code>&amp;mut T</code>.","Same as <code>uget</code>, but returns <code>*mut T</code>.","","Construct a new NumPy array filled with zeros.","Read-only borrow of an array.","Read-only borrow of a one-dimensional array.","Read-only borrow of a two-dimensional array.","Read-only borrow of a three-dimensional array.","Read-only borrow of a four-dimensional array.","Read-only borrow of a five-dimensional array.","Read-only borrow of a six-dimensional array.","Read-only borrow of an array whose dimensionality is …","Read-write borrow of an array.","Read-write borrow of a one-dimensional array.","Read-write borrow of a two-dimensional array.","Read-write borrow of a three-dimensional array.","Read-write borrow of a four-dimensional array.","Read-write borrow of a five-dimensional array.","Read-write borrow of a six-dimensional array.","Read-write borrow of an array whose dimensionality is …","Provides an immutable array view of the interior of the …","Provides a mutable array view of the interior of the NumPy …","Convert this one-dimensional array into a …","Convert this two-dimensional array into a …","Convert this two-dimensional array into a …","Convert this one-dimensional array into a …","Provide an immutable slice view of the interior of the …","Provide a mutable slice view of the interior of the NumPy …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Provide an immutable reference to an element of the NumPy …","Provide a mutable reference to an element of the NumPy …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Extends or truncates the dimensions of an array.","","","","","","Try to convert this array into a <code>nalgebra::MatrixView</code> …","Try to convert this array into a <code>nalgebra::MatrixViewMut</code> …","","","","","","","The dimension type of the resulting array.","The dimension type of the resulting array.","Conversion trait from owning Rust types into <code>PyArray</code>.","The element type of resulting array.","The element type of resulting array.","Trait implemented by types that can be used to index an …","Utility trait to specify the dimensions of an array.","Conversion trait from borrowing Rust types to <code>PyArray</code>.","Consumes <code>self</code> and moves its data into a NumPy array.","Copies the content pointed to by <code>&amp;self</code> into a newly …","The abbrevation used for debug formatting","Corresponds to the <code>datetime64</code> scalar type","Corresponds to the [<code>timedelta64</code>][scalars-datetime64] …","The matching NumPy datetime unit code","Represents the datetime units supported by NumPy","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Predefined implementors of the <code>Unit</code> trait","Attoseconds, i.e. 10^-18 seconds","Days, i.e. 24 hours","Femtoseconds, i.e. 10^-15 seconds","Hours, i.e. 60 minutes","Microseconds, i.e. 10^-6 seconds","Milliseconds, i.e. 10^-3 seconds","Minutes, i.e. 60 seconds","Months, i.e. 30 days","Nanoseconds, i.e. 10^-9 seconds","Picoseconds, i.e. 10^-12 seconds","Seconds","Weeks, i.e. 7 days","Years, i.e. 12 months","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low-Level binding for Array API","","Low-Lebel binding for NumPy C API C-objects","","Low-Level binding for UFunc API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All type objects exported by the NumPy API.","A global variable which stores a ‘capsule’ pointer to …","See PY_ARRAY_API for more.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that <code>op</code> is an instance of <code>PyArray</code> or not.","","","Checks that <code>op</code> is an exact instance of <code>PyArray</code> or noteturns the argument unchanged.","Returns the argument unchanged.","","","Get a pointer of the type object assocaited with <code>ty</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeglobal variable which stores a ‘capsule’ pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[9,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,8,9,0,0,10,4,4,10,4,10,4,0,4,10,5,8,9,4,10,5,8,9,4,4,0,0,4,10,0,0,10,0,0,4,10,4,4,4,10,10,5,5,8,8,9,9,4,10,5,8,9,4,10,4,10,4,10,5,8,9,0,36,135,136,4,4,4,4,0,4,10,5,8,9,4,4,10,10,4,10,10,10,4,10,4,10,5,8,9,4,4,10,4,4,10,0,4,0,4,10,4,0,4,4,4,5,8,9,0,0,4,10,10,4,10,4,10,5,8,9,4,10,5,8,9,4,10,5,8,9,4,4,10,10,5,8,9,4,10,4,10,4,10,5,8,9,4,10,5,8,9,4,10,4,10,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,54,53,53,54,54,53,54,53,54,53,54,53,53,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,54,53,53,54,53,54,53,54,53,54,53,54,53,54,137,138,0,137,138,0,0,0,137,138,63,0,0,63,0,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,64,65,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,72,73,74,75,76,77,78,79,80,81,82,83,84,0,0,0,0,0,117,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,117,117,117,117,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,85,85,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,117,85,85,85,85,85,85,85,85,85,117,117,117,117,117,117,117,117,85,85,85,85,85,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,85,85,85,117,85,117,85,117,85,117,85,85,117,85,117,85,117,85,117,85,117,85,117,85,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,111,12,112,122,109,109,109,119,111,112,122,11,118,97,124,125,111,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,112,122,12,12,109,109,109,109,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,123,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,109,111,122,112,122,112,122,109,109,121,121,121,121,121,121,11,120,121,112,122,111,11,120,11,96,122,111,112,122,121,109,12,111,111,111,111,111,111,12,112,122,111,111,109,109,109,12,109,109,11,12,119,97,120,89,123,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,109,121,109,12,121,112,96,122,111,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,120,111,121,111,96,12,121,110,97,112,122,112,122,121,125,12,122,121,12,121,11,120,96,122,111,111,112,122,111,121,109,121,0,121,124,96,111,11,12,119,97,121,112,96,122,111,121,121,111,111,111,111,110,97,121,123,121,121,109,109,109,118,120,112,96,122,111,109,11,120,112,122,12,111,111,111,111,111,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,112,122,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,120,12,11,12,118,109,119,110,97,120,121,89,112,96,122,111,123,124,125,12,121,120,12,121,111,121,11,56,132,129,130,98,129,130,0,0,129,130,129,130,129,130,99,0,129,130,131,98,56,129,130,0,129,130,87,129,131,130,98,56,102,102,102,102,102,102,102,102,102,102,102,102,102,102,131,129,130,94,132,129,130,98,130,98,93,56,132,129,129,130,129,130,130,94,132,132,98,129,87,129,129,130,98,132,0,94,99,87,87,0,113,113,0,0,129,130,131,0,129,130,130,132,129,130,0,0,0,129,130,129,130,130,129,129,130,130,129,130,87,131,129,129,130,129,130,99,103,114,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,129,103,114,56,98,94,113,102,129,93,87,99,132,126,127,128,56,98,94,113,102,129,93,87,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,56,98,94,113,102,129,93,87,99,132,103,126,127,128,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,101,103,114,126,127,128,103,114,101,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,126,127,128,56,98,94,113,102,129,93,87,99,103,114,101,130,131,132,103,114,103,0,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133],"f":[0,0,0,0,0,0,0,0,[1,2],0,[[1,1],2],0,[[1,1,1],2],0,[[1,1,1,1],2],0,[[1,1,1,1,1],2],0,[[1,1,1,1,1,1],2],0,[[],[[2,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,1],[[5,6],7],[[8,6],7],[[9,6],7],0,0,[10,11],[4,12],[4,13],[10,13],[4,14],[10,14],[4,4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,15],[4,15],0,0,[4,14],[10,14],[[16,16],17],[6,4],[10,4],[18,17],0,[14,[[17,[4]]]],[14,[[17,[10]]]],[4,19],[[4,20],[[22,[21]]]],[[4,20],[[22,[21]]]],[[10,20],[[22,[21]]]],[[10,20],[[22,[21]]]],[[5,20],23],[[5,20],23],[[8,20],23],[[8,20],23],[[9,20],23],[[9,20],23],[[]],[[]],[[]],[[]],[[]],[[6,13],24],[[6,13],24],[[6,13],24],[[6,13],24],[[]],[[]],[[]],[[]],[[]],0,[6,4],[6,4],[6,4],[[4,18],17],[4,25],[4,25],[4,25],[[16,16],17],[[]],[[]],[[]],[[]],[[]],[4,12],[[4,6],[[26,[4]]]],[[10,6],[[26,[10]]]],[[10,6],7],[4,25],[10,25],[10,25],[10,25],[[4,4],25],[10,25],[[],25],[[],25],[[],25],[[],25],[[],25],[4,[[24,[25]]]],[14,25],[14,25],[4,1],[4,15],[10,1],0,[4,[[24,[[27,[18]]]]]],0,[4,1],[10,1],[6,[[17,[4]]]],0,[4,28],[6,4],[6,4],[29],[29],[29],0,0,[4,[[27,[1]]]],[10],[10],[[4,6],7],[[10,6],7],[[],30],[[],30],[[],30],[[],30],[[],30],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[],22],[[],[[22,[31]]]],[[],[[22,[31]]]],[[],22],[[],22],[[],22],[[],22],[[],[[22,[31]]]],[[],[[22,[31]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],[[],32],[[],32],[[],32],[6,33],[6,33],[4,34],[6,[[22,[[26,[14]],35]]]],0,0,0,0,0,0,0,0,0,[[6,[0,[36,[38,[37]]]],[0,[36,[38,[37]]]],[0,[36,[38,[37]]]]],[[16,[[0,[36,[38,[37]]]],39]]]],[[[16,[36,40]]],[[41,[36,40]]]],[[[16,[36,40]]],[[42,[36,40]]]],[16,13],[[[16,[36,40]]],[[43,[36,40]]]],[[[16,[36,40]]],[[44,[36,40]]]],[16,14],[[[16,[36,40]]],[[22,[8]]]],[[[16,[36,40]]],[[22,[8]]]],[16,10],[[]],[[45,14],[[16,[36,40]]]],[[]],[[[16,[36]],25],[[17,[16]]]],[[[16,[36]],16],17],[16],[16],[[[16,[36,40]]],40],[14,[[17,[16]]]],[[16,20],[[22,[21]]]],[[16,20],[[22,[21]]]],[[]],[[6,45],[[16,[36,40]]]],[[6,13],16],[[6,13],24],[6,[[16,[36,39]]]],[[6,[46,[36,40]]],[[16,[36,40]]]],[[6,[46,[26,40]]],[[16,[7,40]]]],[[6,13],16],[[6,13],24],[6,[[16,[36,39]]]],[[]],[[6,[27,[36]]],[[16,[36,39]]]],[6,[[22,[[16,[36,47]],5]]]],[6,[[22,[[16,[36,48]],5]]]],[[[16,[36,40]],49],24],[6,[[17,[50]]]],[[[16,[36,40]],49],24],[[[16,[36,40]]],[[24,[36]]]],[[]],[[16,6],7],[[16,6],[[26,[16]]]],[[],25],[14,25],[[[16,[[0,[51,36]],52]]],[[0,[51,36]]]],[[6,25],[[16,[36,40]]]],[[[16,[36,40]]],[[53,[36,40]]]],[[[16,[36,40]]],[[54,[36,40]]]],[[[16,[36]],55],[[17,[16]]]],[[[16,[36]],55,56],[[17,[16]]]],[[[16,[36]],55],17],[[[16,[36,40]]],16],[[16,6],7],[16,[[26,[16]]]],[[[16,[36,40]]],[[46,[36,40]]]],[[],30],[[],24],[[]],[[[16,[36,40]]],[[22,[[27,[36]],8]]]],[16,[[24,[57]]]],[16,[[24,[58]]]],[[],22],[[],[[22,[31]]]],[[],[[22,[31]]]],[[]],[[],22],[[[16,[36,40]]],[[22,[[53,[36,40]],9]]]],[[[16,[36,40]]],[[22,[[54,[36,40]],9]]]],[[],32],[6,33],[[[16,[36,40]]]],[[[16,[36,40]]]],[[[16,[36,40]]]],[6,[[22,[[26,[14]],35]]]],[[6,25],[[16,[36,40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[53,41],[54,42],[[[53,[39]]],[[60,[59,59]]]],[[[53,[47]]],[[60,[59,59]]]],[[[54,[47]]],[[61,[59,59]]]],[[[54,[39]]],[[61,[59,59]]]],[53,[[22,[8]]]],[54,[[22,[8]]]],[[]],[[]],[[]],[[]],[53,53],[[]],[53],[54],[53],[54],[14,[[17,[[53,[36,40]]]]]],[14,[[17,[[54,[36,40]]]]]],[[53,20],23],[[54,20],23],[[]],[[]],[[]],[[]],[53,24],[54,24],[[]],[[]],[[],25],[[],25],[[[54,[39]],55],[[17,[[54,[39]]]]]],[[]],[[],24],[[],24],[[]],[[]],[53,[[24,[57]]]],[54,[[24,[58]]]],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],0,0,0,0,0,0,0,0,[6,16],[6,16],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[64,[[0,[62,63]]]]],[[64,[[0,[62,63]]]]]],[[[65,[[0,[62,63]]]]],[[65,[[0,[62,63]]]]]],[[]],[[]],[[[64,[[0,[66,63]]]],64],67],[[[65,[[0,[66,63]]]],65],67],[[[64,[[0,[68,63]]]],64],25],[[[65,[[0,[68,63]]]],65],25],[[[64,[63]],20],23],[[[65,[63]],20],23],[[]],[69,[[64,[63]]]],[69,[[65,[63]]]],[[]],[[]],[[]],[6,4],[6,4],[[[64,[[0,[70,63]]]]]],[[[65,[[0,[70,63]]]]]],[[]],[[]],[[],25],[[],25],[[[64,[[0,[71,63]]]],64],[[24,[67]]]],[[[65,[[0,[71,63]]]],65],[[24,[67]]]],[[]],[[]],[[],24],[[],24],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,72],67],[[73,73],67],[[74,74],67],[[75,75],67],[[76,76],67],[[77,77],67],[[78,78],67],[[79,79],67],[[80,80],67],[[81,81],67],[[82,82],67],[[83,83],67],[[84,84],67],[[72,72],25],[[73,73],25],[[74,74],25],[[75,75],25],[[76,76],25],[[77,77],25],[[78,78],25],[[79,79],25],[[80,80],25],[[81,81],25],[[82,82],25],[[83,83],25],[[84,84],25],[[72,20],23],[[73,20],23],[[74,20],23],[[75,20],23],[[76,20],23],[[77,20],23],[[78,20],23],[[79,20],23],[[80,20],23],[[81,20],23],[[82,20],23],[[83,20],23],[[84,20],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72],[73],[74],[75],[76],[77],[78],[79],[80],[81],[82],[83],[84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[72,72],[[24,[67]]]],[[73,73],[[24,[67]]]],[[74,74],[[24,[67]]]],[[75,75],[[24,[67]]]],[[76,76],[[24,[67]]]],[[77,77],[[24,[67]]]],[[78,78],[[24,[67]]]],[[79,79],[[24,[67]]]],[[80,80],[[24,[67]]]],[[81,81],[[24,[67]]]],[[82,82],[[24,[67]]]],[[83,83],[[24,[67]]]],[[84,84],[[24,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,[[85,6,28,11,86,56,87,86,12,28,28,88,88],89],[[85,6,89],89],[[85,6,89,88,88],28],[[85,6,89],28],[[85,6,89]],[[85,6,89],28],[[85,6,89,28],88],[[85,6,89],88],[[85,6,89],19],[[85,6,89],12],[[85,6,89,19],90],[[85,6,89],88],[[85,6,89],19],[[85,6,89,88]],[[85,6,89],88],[[85,6,89],88],[[85,6,89],88],[[85,6,89,88,88]],[[85,6,89,19],91],[[85,6,89],88],[[85,6,89,88],11],[[85,6,89],28],[[85,6,89],28],[[85,6,89],11],[[85,6,89,19]],[[85,6,89,88],28],[[85,6,89,19]],[[85,6,89,88],28],[[85,6,89,88],28],[[85,6,89,88],28],[[85,6,89],92],[[85,6,89],92],[[85,6,89],92],[[85,6,89],92],[[85,6,89],92],[[85,6,89,28],92],[[85,6,89],92],[[85,6,89],92],[[85,6,28,11,86,56,87,86,12],89],[[85,6,11,86,56,87,12],89],[[85,6,89,28],28],[[85,6,89],28],[[85,6,89],92],[[85,6,89,19],28],[[85,6,89,19,19],28],[[85,6,89,88,88,19],28],0,0,0,0,0,0,0,[[85,6,11,28,11],13],[[85,6,11,28,11],13],[[85,6,37,37,37,28],13],[[85,6,13,13,13,12],13],[[85,6,11,28,11],13],[[85,6,11,28,11],13],[[85,6,11,11,28,93],13],[[85,6,11,28,94],13],[[85,6,13,19,28,28],28],[[85,6,13,19,28,28,28],28],[[85,6,13,95,88,28,12],28],[[85,6,13,28],28],[[85,6,13,92],28],[[85,6,96],28],[[85,6,13,88,28],13],[[85,6,13,97],28],[[85,6,13,19],28],[[85,6,11,92],13],[[85,6,11,12,87],92],[[85,6,28,28],28],[[85,6,33,33],92],[[85,6,12,12],92],[[85,6,12,12,87],92],[[85,6,28,28,98],28],[[85,6,11,11],28],[[85,6,13,12,95,28],28],[[85,6,13,95,12],28],[[85,6,11,11],28],[[85,6,11,12,28],13],[[85,6,13,87],28],[[6,13],28],[[85,6,13],28],[[85,6,11,28,28],13],[[6,13],28],[[85,6,13,12,28,28,28,13],13],[[85,6,28,28,88,88,88,88],92],[[85,6,11,13,11,99],13],[[85,6,11,13,13,11],13],[[85,6,13,99],28],[[85,6,88,88,28],28],[[85,6,19,19,1],28],[[85,6,100,100,1],28],[[85,6,11,13,28,11],13],[[85,6,13,28],13],[[85,6,11,11],13],[[85,6,13,99,28],28],[[85,6,13,28],11],[[85,6,13,13],28],[[85,6,13],13],[[85,6,11,11],28],[[85,6,11,11],28],[[85,6,11,13],28],[[85,6,13,13,28],13],[[85,6,13,13,28],13],[[85,6,11],88],[[85,6,28,88,101]],[[85,6,11,28,28,11],13],[[85,6,11,28,28,11],13],[[85,6,102,103],104],[[85,6,104,102,103]],[[85,6,11]],[[85,6,13,12],28],[[85,6,13,12],28],[[85,6,13,12],28],[[85,6,13,12],28],[[85,6,13,12],12],[[85,6,13],12],[[85,6,28],12],[[85,6,13],12],[[85,6,12],12],[[85,6,12,19],12],[[85,6,28],12],[[85,6,11,28,28,28],13],[[85,6,13,13,28],28],[[85,6,13,28],13],[[85,6,19,88,11,12,56,87,11],13],[[85,6,19],28],[[85,6,13],28],[[85,6,28,88,12,28],13],[[85,6,13],13],[[85,6,13],13],[[85,6,28,28],105],[[85,6,12,12],105],[[85,6,11,19],28],[[85,6,13],13],[[85,6,11,13]],[[85,6,11,13],28],[[85,6,11,56],13],[[85,6,13,95],28],[[85,6,13,12,28,28,28,13],13],[[85,6,11,12,28],13],[[85,6,13,12,13],13],[[85,6,13,12,88,88],13],[[85,6,28,28,28],13],[[85,6,28,28,12,19],13],[[85,6,106,12,88,19],13],[[85,6,13],13],[[85,6,13,12,88],13],[[85,6,13,12],13],[[85,6,19,88,12,88,19],13],[[85,6,13],13],[[85,6,13,12,92,12,28,88,11,13],28],[[85,6,12,28],107],[[85,6],28],[[85,6,11,12,28],13],[[85,6],108],[[85,6],108],[[85,6],13],[[85,6,13,37],37],[[85,6,11,88],95],[[85,6,11],28],[[85,6,109]],[[85,6,13,13],13],[[85,6,28,88],13],[[85,6,13,110],28],[[85,6,13,88,28],28],[[85,6,19,12]],[[85,6,19,12]],[[85,6,13,28],13],[[85,6,13],13],[[85,6,13,28],13],[[85,6,11,13],13],[[85,6,11,13,28,11],13],[[85,6,111]],[[85,6,111,11,28]],[[85,6,13,13],13],[[85,6,13,13,11],13],[[85,6,11,28,11],13],[[85,6,11,28,28,11],13],[[85,6,11,28,11],13],[[85,6,11],12],[[85,6,11,11],28],[[85,6,28,28],28],[[85,6,88,28],88],[[85,6,112,88,28,11],13],[[85,6,33,28,88,28,88,95,28,28,13],13],[[85,6,11,56],13],[[85,6,13],13],[[85,6,33,12,28,88,88,95,28,13],13],[[85,6,11,56,12,28],13],[[85,6,11,110,56],13],[[85,6,11],13],[[85,6,13,28],28],[[85,6,11],19],[[85,6,13,56],28],[[85,6,13,11],28],[[85,6,88,28],88],[[85,6,11,11,28,93],28],[[85,6,11,28,28,11],13],[[85,6,12,12],12],[[85,6,11,28,11],13],[[85,6,11,13,13],13],[[85,6,11,13,13,99],13],[[85,6,13],28],[[85,6,13],88],[[85,6,11,56],13],[[85,6,12,28,98],28],[[85,6,12,28,107],28],[[85,6,12],28],[[85,6,11,92]],[[85,6,96],28],[[85,6,11,13,28],13],[[85,6,11,13],13],[[85,6,11,110,28,56],13],[[85,6,11],28],[[85,6,88,11,88,12],12],[[85,6,11],13],[[85,6,11,28,11],13],[[85,6,95,12,13],13],[[85,6,13,95]],[[85,6,13],13],[[85,6,28,11],98],[[85,6,11,13,113,13],13],[[85,6,13,95],28],[[85,6,13,93],28],[[85,6,11,13],28],[[85,6,13]],[[85,6,11,12,28,13],28],[[85,6,13],28],[[85,6,13,28]],[[85,6,11,11],28],[[85,6,11,11],28],[[85,6,13],88],[[85,6,11,28,94],28],[[85,6,13,94],28],[[85,6,11],13],[[85,6,11,28,28,11,28],13],[[85,6,11,28,28,11],13],[[85,6,11,28,28],13],[[85,6,11,13,28,11,99],13],[[85,6,102,114],104],[[85,6,115,102,114]],[[85,6,11,106,19,19],28],[[85,6,11],13],[[85,6,11,56],13],[[85,6,11,28,28,28,28,11],13],[[85,6,11,110],13],0,[[85,6,28],13],[[85,6,28,28],28],[[85,6,11,28]],[[85,6,28],28],[[85,6,11,12,33],13],[[85,6,13,13,13],13],[[85,6,11],28],[[85,6,11],19],[[85,6,28,88,12,28],13],0,0,0,0,0,0,0,0,[[85,6,95]],[[85,6,1],95],[[85,6,1,1],95],[[85,6,95,1],95],[[85,6,116,95,95],116],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,6],95],[[85,6,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,6,117],33],[[]],[[]],[[],25],[[],25],[[],24],[[],24],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[11,11],[12,12],[118,118],[109,109],[119,119],[110,110],[97,97],[120,120],[121,121],[89,89],[112,112],[96,96],[122,122],[111,111],[123,123],[124,124],[125,125],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,20],23],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,126],[127,127],[128,128],[56,56],[98,98],[94,94],[113,113],[102,102],[129,129],[93,93],[87,87],[99,99],[103,103],[114,114],[101,101],[130,130],[131,131],[132,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[129,129],67],0,0,[[56,56],25],[[98,98],25],[[94,94],25],[[113,113],25],[[102,102],25],[[129,129],25],[[93,93],25],[[87,87],25],[[99,99],25],[[132,132],25],[[126,20],23],[[127,20],23],[[128,20],23],[[56,20],23],[[98,20],23],[[94,20],23],[[113,20],23],[[102,20],23],[[129,20],23],[[93,20],23],[[87,20],23],[[103,20],23],[[114,20],23],[[101,20],23],[[130,20],23],[[131,20],23],[[132,20],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56],[98],[94],[113],[102],[129],[93],[87],[99],[132],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[129,129],[[24,[67]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,0,0,[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,121,87,11,13,12],28],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,134,95,19,28,28,28,28,19,19,28],13],[[133,6,134,95,19,28,28,28,28,19,19,28,19],13],[[133,6,121,95,19,28,28,28,28,19,19,28,19,19],28],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,121,13,13,11],28],[[133,6,19,28,28,13],28],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,121,12,134,12,95],28],[[133,6,121,28,134,28,95],28],[[133,6,121,134,28,134],28],[[133,6,95,1],28],[[133,6,121,87,11,12],28],[[133,6,28,13,28],28],[[133,6]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6,19,88,88,95]],[[133,6],28],[[133,6,19,88,88,95]],[[133,6,28,13,28,28],28],[[]],[[]],[[]],[[]],[[]],[[],25],[[],24],[[]],[[],22],[[],22],[[],32]],"p":[[15,"usize"],[3,"Dim"],[3,"IxDynImpl"],[3,"PyArrayDescr"],[3,"FromVecError"],[3,"Python"],[6,"PyObject"],[3,"NotContiguousError"],[4,"BorrowError"],[3,"PyUntypedArray"],[3,"PyArrayObject"],[3,"PyArray_Descr"],[3,"PyObject"],[3,"PyAny"],[15,"u8"],[3,"PyArray"],[6,"PyResult"],[15,"str"],[6,"c_char"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[4,"Option"],[15,"bool"],[3,"Py"],[3,"Vec"],[6,"c_int"],[3,"Demand"],[3,"String"],[3,"PyDowncastError"],[3,"TypeId"],[3,"PyTypeObject"],[3,"PyType"],[3,"PyErr"],[8,"Element"],[15,"f64"],[8,"AsPrimitive"],[6,"Ix1"],[8,"Dimension"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"RawArrayView"],[6,"RawArrayViewMut"],[3,"ArrayBase"],[6,"Array"],[6,"Ix2"],[6,"Ix3"],[8,"NpyIndex"],[3,"PyModule"],[8,"Copy"],[6,"Ix0"],[3,"PyReadonlyArray"],[3,"PyReadwriteArray"],[8,"IntoDimension"],[4,"NPY_ORDER"],[6,"MatrixView"],[6,"MatrixViewMut"],[3,"Dyn"],[6,"DMatrixView"],[6,"DMatrixViewMut"],[8,"Clone"],[8,"Unit"],[3,"Datetime"],[3,"Timedelta"],[8,"Ord"],[4,"Ordering"],[8,"PartialEq"],[15,"i64"],[8,"Hash"],[8,"PartialOrd"],[3,"Years"],[3,"Months"],[3,"Weeks"],[3,"Days"],[3,"Hours"],[3,"Minutes"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[3,"Picoseconds"],[3,"Femtoseconds"],[3,"Attoseconds"],[3,"PyArrayAPI"],[6,"npy_uint32"],[4,"NPY_CASTING"],[6,"npy_intp"],[3,"NpyIter"],[6,"NpyIter_GetMultiIndexFunc"],[6,"NpyIter_IterNextFunc"],[6,"npy_bool"],[4,"NPY_SELECTKIND"],[4,"NPY_SORTKIND"],[6,"c_void"],[3,"PyArrayMultiIterObject"],[3,"PyArray_Chunk"],[4,"NPY_SCALARKIND"],[4,"NPY_CLIPMODE"],[6,"npy_ucs4"],[3,"npy_stride_sort_item"],[4,"NPY_DATETIMEUNIT"],[3,"npy_datetimestruct"],[6,"npy_datetime"],[6,"c_uchar"],[4,"FILE"],[6,"PyArray_VectorUnaryFunc"],[6,"c_uint"],[3,"PyArray_ArrFuncs"],[3,"PyArray_Dims"],[3,"PyArrayMapIterObject"],[3,"PyArrayIterObject"],[4,"NPY_SEARCHSIDE"],[3,"npy_timedeltastruct"],[6,"npy_timedelta"],[6,"PyDataMem_EventHookFunc"],[4,"NpyTypes"],[3,"PyArray_ArrayDescr"],[3,"PyArrayFlagsObject"],[3,"PyArrayInterface"],[3,"PyUFuncObject"],[3,"PyArrayNeighborhoodIterObject"],[3,"NpyAuxData"],[3,"PyArray_DatetimeMetaData"],[3,"PyArray_DatetimeDTypeMetaData"],[3,"npy_cdouble"],[3,"npy_cfloat"],[3,"npy_clongdouble"],[4,"NPY_TYPES"],[4,"NPY_TYPECHAR"],[4,"NPY_TYPEKINDCHAR"],[4,"NPY_BYTEORDER_CHAR"],[3,"PyUFuncAPI"],[6,"PyUFuncGenericFunction"],[6,"Complex32"],[6,"Complex64"],[8,"IntoPyArray"],[8,"ToPyArray"]],"a":{"nalgebra":[281,282,315,316,317,318,351,352]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
