(function() {var implementors = {};
implementors["numpy"] = [{"text":"impl&lt;T, D&gt; !Send for PyArray&lt;T, D&gt;","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayDescr","synthetic":true,"types":[]},{"text":"impl Send for DataType","synthetic":true,"types":[]},{"text":"impl Send for ShapeError","synthetic":true,"types":[]},{"text":"impl Send for FromVecError","synthetic":true,"types":[]},{"text":"impl Send for NotContiguousError","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayAPI","synthetic":true,"types":[]},{"text":"impl Send for NpyTypes","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayObject","synthetic":true,"types":[]},{"text":"impl !Send for PyArray_Descr","synthetic":true,"types":[]},{"text":"impl !Send for PyArrray_ArrayDescr","synthetic":true,"types":[]},{"text":"impl !Send for PyArray_ArrFuncs","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayFlagsObject","synthetic":true,"types":[]},{"text":"impl !Send for PyArray_Dims","synthetic":true,"types":[]},{"text":"impl !Send for PyArray_Chunk","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayInterface","synthetic":true,"types":[]},{"text":"impl !Send for PyUFuncObject","synthetic":true,"types":[]},{"text":"impl Send for NpyIter","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayIterObject","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayMultiIterObject","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayNeighborhoodIterObject","synthetic":true,"types":[]},{"text":"impl !Send for PyArrayMapIterObject","synthetic":true,"types":[]},{"text":"impl !Send for NpyAuxData","synthetic":true,"types":[]},{"text":"impl Send for npy_cdouble","synthetic":true,"types":[]},{"text":"impl Send for npy_cfloat","synthetic":true,"types":[]},{"text":"impl Send for npy_clongdouble","synthetic":true,"types":[]},{"text":"impl Send for NPY_ORDER","synthetic":true,"types":[]},{"text":"impl Send for NPY_SCALARKIND","synthetic":true,"types":[]},{"text":"impl Send for NPY_SORTKIND","synthetic":true,"types":[]},{"text":"impl Send for NPY_SEARCHSIDE","synthetic":true,"types":[]},{"text":"impl Send for NPY_DATETIMEUNIT","synthetic":true,"types":[]},{"text":"impl Send for NPY_TYPES","synthetic":true,"types":[]},{"text":"impl Send for NPY_SELECTKIND","synthetic":true,"types":[]},{"text":"impl Send for NPY_CASTING","synthetic":true,"types":[]},{"text":"impl Send for NPY_CLIPMODE","synthetic":true,"types":[]},{"text":"impl Send for npy_datetimestruct","synthetic":true,"types":[]},{"text":"impl Send for npy_timedeltastruct","synthetic":true,"types":[]},{"text":"impl Send for npy_stride_sort_item","synthetic":true,"types":[]},{"text":"impl !Send for PyUFuncAPI","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for RO&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for RW&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for NpyIterFlag","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !Send for NpySingleIterBuilder&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !Send for NpySingleIter&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !Send for NpyMultiIterBuilder&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !Send for NpyMultiIter&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, D&gt; !Send for PyReadonlyArray&lt;'py, T, D&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()