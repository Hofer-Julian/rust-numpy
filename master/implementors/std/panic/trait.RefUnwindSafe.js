(function() {var implementors = {};
implementors["numpy"] = [{"text":"impl !RefUnwindSafe for PyArrayDescr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FromVecError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotContiguousError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShapeError","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, D&gt; !RefUnwindSafe for PyReadonlyArray&lt;'py, T, D&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl&lt;T, D&gt; !RefUnwindSafe for PyArray&lt;T, D&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PyArrayAPI","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NpyTypes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArray_Descr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrray_ArrayDescr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArray_ArrFuncs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayFlagsObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArray_Dims","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArray_Chunk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayInterface","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyUFuncObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NpyIter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayIterObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayMultiIterObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayNeighborhoodIterObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyArrayMapIterObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NpyAuxData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_cdouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_cfloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_clongdouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_datetimestruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_timedeltastruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for npy_stride_sort_item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_ORDER","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_SCALARKIND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_SORTKIND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_SEARCHSIDE","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_DATETIMEUNIT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_TYPES","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_SELECTKIND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_CASTING","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NPY_CLIPMODE","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PyUFuncAPI","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for RO&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; RefUnwindSafe for RW&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !RefUnwindSafe for NpySingleIterBuilder&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, I&gt; !RefUnwindSafe for NpySingleIter&lt;'py, T, I&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !RefUnwindSafe for NpyMultiIterBuilder&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'py, T, S&gt; !RefUnwindSafe for NpyMultiIter&lt;'py, T, S&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NpyIterFlag","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()